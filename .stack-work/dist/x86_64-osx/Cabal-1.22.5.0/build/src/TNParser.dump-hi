
==================== FINAL INTERFACE ====================
2016-03-10 11:11:01.762001 UTC

interface snaph_Lgd3Rz2BLGaKkSAAd4VWq6:TNParser 7103
  interface hash: 9f97965c8b4fd97b3865a8465181b4ce
  ABI hash: d32b33e0a883319e2070133c1d995ec4
  export-list hash: aea19c923056e1cacdef671ab6db5174
  orphan hash: d453bee11bd4721c590fe8c677721f5f
  flag hash: 4c0a7b65a6dddbc4161c2e2bfabe3dc3
  sig of: Nothing
  used TH splices: False
  where
exports:
  TNParser.parseTNGraphEdgesFile
module dependencies: TNGraph TNPrimitiveFunctions TNTypes
package dependencies: mtl-2.2.1@FU2dgI72hN9AAckXjzRNTy
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0*
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6*
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU*
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm
                      text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString effd24476ff7cd481cf047a616a25531
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Strict 2e796f3ebd5f3ce783e00a01f5cdcaa8
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm:Text.Parsec.Char ee72d8b0609c1655a722bc193c158112
import  -/  parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm:Text.Parsec.Combinator 727a014b3352c7dfc3842dacc2be566b
import  -/  parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm:Text.Parsec.Error 8decb70128a59f18ffdc664f9e747ee3
import  -/  parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm:Text.Parsec.Prim 14121d8c5426ae8fb944fcdadf2fc334
import  -/  parsec-3.1.9@parse_8vELjwlXlEQCYrSiiBnCcm:Text.ParserCombinators.Parsec 84ce82989188fd7cd773759ca7f98c89
import  -/  TNGraph 9a9b13211a21c0f9cf601b55651c94ee
  exports: 46ed0ff638d7eb91425b970c4d36eaa6
  buildTNGraphFromInfo bc3e71ddff8c43b4efba2ac63df2c364
import  -/  TNTypes 25d68b9f8ad46f537656865954f7c3c6
  exports: c002d1c7dd5f3c2abcd80cefb09b82b9
  TGraphInfo 12f6b461189f936229f0ecb081ef0276
  TNDGraph 844be5a3e9caac7894ca8a72f5556fda
  TNGraph 426a917e7487723ae62048b9afba5a36
  TNVertex cd35c0648eef8e31cf80b9584b0f3d18
  TNVertexValue ead5c5b245bdf9918829aa655c5f67d7
5a683c9aa80d51a82c276689f835852d
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (TNParser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
d324343ba7a8bb78b22a537316f46ce6
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok ds :: [tok] ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
4049dbfca03371a10d991be25471cc40
  eol ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (TNParser.$s$fStream[]mtok @ GHC.Types.Char)
                   TNParser.parseTNGraphEdgesFile5) -}
efb507ace7bede1afd4e6027a6521036
  parseTNGraphEdgesFile ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String TNTypes.TNGraph
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ input :: GHC.Base.String ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ ()
                         @ Data.Functor.Identity.Identity
                         @ ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                         @ GHC.Types.Char
                         (TNParser.$s$fStream[]mtok @ GHC.Types.Char)
                         (TNParser.parseTNGraphEdgesFile2 @ ())
                           `cast`
                         (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                   <GHC.Base.String>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <([(TNTypes.TNVertex, TNTypes.TNVertex)],
                                     Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)>_R))
                         GHC.Tuple.()
                         TNParser.parseTNGraphEdgesFile1
                         input)
                        `cast`
                      (Data.Functor.Identity.NTCo:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError
                              ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                               Data.Map.Base.Map
                                 TNTypes.TNVertex TNTypes.TNVertexValue)>_R) of wild {
                   Data.Either.Left x
                   -> Data.Either.Left
                        @ GHC.Base.String
                        @ TNTypes.TNGraph
                        (Text.Parsec.Error.$fShowParseError_$cshow x)
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ GHC.Base.String
                        @ TNTypes.TNGraph
                        (case TNGraph.$wbuildTNGraphFromInfo
                                TNTypes.TNDGraph
                                y of ww { (#,,#) ww1 ww2 ww3 ->
                         TNTypes.TNGraph ww1 ww2 ww3 }) }) -}
9927b3ba0dfd85a47f8f8fc8fe579750
  parseTNGraphEdgesFile1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "(unknown)"#) -}
083097eba30ce22f8eaa34210a7c1081
  parseTNGraphEdgesFile10 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ u
                   @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (TNParser.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
b15a93895d84c8c1cc5ca6520d8243da
  parseTNGraphEdgesFile11 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (TNParser.$s$fStream[]mtok @ GHC.Types.Char)
                   TNParser.parseTNGraphEdgesFile15
                   @ b1
                   eta
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile12
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: [GHC.Types.Char]
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: GHC.Base.String[OneShot]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile12
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: [GHC.Types.Char]
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
4dba4f3b6a48f1a21324e51ee1c19ead
  parseTNGraphEdgesFile12 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa7
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   (TNParser.parseTNGraphEdgesFile14 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (TNParser.parseTNGraphEdgesFile13 @ u)
                   @ b1
                   eta
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (GHC.Types.[] @ GHC.Types.Char)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (GHC.Types.[] @ GHC.Types.Char)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
76a2266c728560dc1c9d1ced84738701
  parseTNGraphEdgesFile13 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Char.newline
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (TNParser.$s$fStream[]mtok @ GHC.Types.Char)) -}
92edd40fdd8dfbf60d0d2510bfbd8182
  parseTNGraphEdgesFile14 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LSS),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta3 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (TNParser.$s$fStream[]mtok @ GHC.Types.Char)
                   Text.Parsec.Char.anyChar2
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
9946f5b6a4591b7a67b6ae59ac399a2e
  parseTNGraphEdgesFile15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "#"#) -}
34d480fccbb011e6ed4c80d16960a9d5
  parseTNGraphEdgesFile2 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
         Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
         Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa15
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   (TNParser.parseTNGraphEdgesFile11 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   eta
                   (\ x :: ()
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile3
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                                Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: ()
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile3
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                                Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))) -}
149342a78914445f25c79b586d3a9ee0
  parseTNGraphEdgesFile3 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
         Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
         Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa4
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ (TNTypes.TNVertex, TNTypes.TNVertex)
                   @ GHC.Types.Char
                   (TNParser.parseTNGraphEdgesFile6 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <(TNTypes.TNVertex, TNTypes.TNVertex)>_R))
                   (TNParser.eol @ u)
                   @ b1
                   eta
                   (\ x :: [(TNTypes.TNVertex, TNTypes.TNVertex)]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile4
                      @ u
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                                Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: [(TNTypes.TNVertex, TNTypes.TNVertex)]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile4
                      @ u
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: ([(TNTypes.TNVertex, TNTypes.TNVertex)],
                                Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))) -}
5f2c3b9704b502286edbbcf2ad5da5ba
  parseTNGraphEdgesFile4 ::
    [(TNTypes.TNVertex, TNTypes.TNVertex)]
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String u
       -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
           -> Text.Parsec.Prim.State GHC.Base.String u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (([(TNTypes.TNVertex, TNTypes.TNVertex)],
            Data.Map.Base.Map TNTypes.TNVertex TNTypes.TNVertexValue)
           -> Text.Parsec.Prim.State GHC.Base.String u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
29bae04e65899381ea363265503bde62
  parseTNGraphEdgesFile5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '\n') -}
4babbda47ad3543bacd97503bcb94462
  parseTNGraphEdgesFile6 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((TNTypes.TNVertex, TNTypes.TNVertex)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((TNTypes.TNVertex, TNTypes.TNVertex)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: (TNTypes.TNVertex, TNTypes.TNVertex)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: (TNTypes.TNVertex, TNTypes.TNVertex)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.many3
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   (TNParser.parseTNGraphEdgesFile8 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   eta
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile7
                      @ u
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: (TNTypes.TNVertex, TNTypes.TNVertex)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    TNParser.parseTNGraphEdgesFile7
                      @ u
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: (TNTypes.TNVertex, TNTypes.TNVertex)
                         s3 :: Text.Parsec.Prim.State GHC.Base.String u[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
1b8b048ed74b2a6dd57457b7bb4996e0
  parseTNGraphEdgesFile7 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String u
       -> ((TNTypes.TNVertex, TNTypes.TNVertex)
           -> Text.Parsec.Prim.State GHC.Base.String u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((TNTypes.TNVertex, TNTypes.TNVertex)
           -> Text.Parsec.Prim.State GHC.Base.String u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
4a94536cfe14d068d1e9586d173b3f76
  parseTNGraphEdgesFile8 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   eta :: Text.Parsec.Prim.State GHC.Base.String u
                   eta1 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta3 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   (TNParser.parseTNGraphEdgesFile10 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TNParser.parseTNGraphEdgesFile9
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
f96ddbc462a094842263c5016c347834
  parseTNGraphEdgesFile9 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.digit2
                   (GHC.Types.[] @ GHC.Base.String)) -}
"SPEC/TNParser $fStream[]mtok _ @ Identity" [ALWAYS] forall @ tok
                                                            $dMonad :: GHC.Base.Monad
                                                                         Data.Functor.Identity.Identity
  Text.Parsec.Prim.$fStream[]mtok @ tok
                                  @ Data.Functor.Identity.Identity
                                  $dMonad
  = TNParser.$s$fStream[]mtok @ tok
"SPEC/TNParser $fStream[]mtok_$cuncons _ @ Identity" [ALWAYS] forall @ tok
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  Data.Functor.Identity.Identity
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ tok
                                           @ Data.Functor.Identity.Identity
                                           $dMonad
  = TNParser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

